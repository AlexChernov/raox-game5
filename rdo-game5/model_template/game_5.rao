$Resource_type Фишка : permanent
$Parameters
	Номер          : integer
	Местоположение : integer
$End

$Resource_type Дырка_t : permanent
$Parameters
		Место: integer
$End

$Resources
	Фишка1 = Фишка(1, 2);
	Фишка2 = Фишка(2, 5);
	Фишка3 = Фишка(3, 1);
	Фишка4 = Фишка(4, 6);
	Фишка5 = Фишка(5, 3);
	Дырка = Дырка_t(4);
$End

$Pattern Перемещение_фишки : rule
$Parameters
	Куда_перемещать: such_as Место_дырки
	На_сколько_перемещать: integer
$Relevant_resources
	_Фишка: Фишка   Keep
	_Дырка: Дырка_t Keep
$Body
	_Фишка:
		Choice from Где_дырка(_Фишка.Местоположение) == Куда_перемещать
		first
			Convert_rule Местоположение = _Фишка.Местоположение + На_сколько_перемещать;
	_Дырка:
		Choice NoCheck
		first
			Convert_rule Место = _Дырка.Место - На_сколько_перемещать;
$End

$Constant
	Место_дырки: (справа, слева, сверху, снизу, дырки_рядом_нет) = дырки_рядом_нет
	Длина_поля : integer = 3
$End

$Function Ряд: integer
$Type = algorithmic
$Parameters
	Местоположение: integer
$Body
	return (Местоположение - 1)/Длина_поля + 1;
$End

$Function Остаток_от_деления : integer
$Type = algorithmic
$Parameters
	Делимое   : integer
	Делитель  : integer
$Body
	integer Целая_часть  = Делимое/Делитель;
	integer Макс_делимое = Делитель * Целая_часть;
	return Делимое -  Макс_делимое;
$End

$Function Столбец: integer
$Type = algorithmic
$Parameters
	Местоположение: integer
$Body
	return Остаток_от_деления(Местоположение - 1,Длина_поля) + 1;
$End

$Function Где_дырка : such_as Место_дырки
$Type = algorithmic
$Parameters
	_Место: such_as Фишка.Местоположение
$Body
	if (Столбец(_Место) == Столбец(Дырка.Место) and Ряд(_Место) == Ряд(Дырка.Место)+ 1) return сверху;
	if (Столбец(_Место) == Столбец(Дырка.Место) and Ряд(_Место) == Ряд(Дырка.Место)- 1) return снизу;
	if (Ряд(_Место) == Ряд(Дырка.Место) and Столбец(_Место) == Столбец(Дырка.Место)- 1) return справа;
	if (Ряд(_Место) == Ряд(Дырка.Место) and Столбец(_Место) == Столбец(Дырка.Место)+ 1) return слева;
	return дырки_рядом_нет;
$End

$Function Фишка_на_месте : integer
$Type = algorithmic
$Parameters
	_Номер: such_as Фишка.Номер
	_Место: such_as Фишка.Местоположение
$Body
	if (_Номер == _Место) return 1;
	else                  return 0;
$End

$Function Кол_во_фишек_не_на_месте : integer
$Type = algorithmic
$Parameters
$Body
	return 5 - (Фишка_на_месте(Фишка1.Номер, Фишка1.Местоположение)+
	            Фишка_на_месте(Фишка2.Номер, Фишка2.Местоположение)+
	            Фишка_на_месте(Фишка3.Номер, Фишка3.Местоположение)+
	            Фишка_на_месте(Фишка4.Номер, Фишка4.Местоположение)+
	            Фишка_на_месте(Фишка5.Номер, Фишка5.Местоположение));
$End

$Function Расстояние_фишки_до_места : integer
$Type = algorithmic
$Parameters
	Откуда: integer
	Куда  : integer
$Body
	return Math.abs(Ряд(Откуда)-Ряд(Куда)) + Math.abs(Столбец(Откуда)-Столбец(Куда));
$End

$Function Расстояния_фишек_до_мест : integer
$Type = algorithmic
$Parameters
$Body
	return Расстояние_фишки_до_места(Фишка1.Номер, Фишка1.Местоположение)+
	       Расстояние_фишки_до_места(Фишка2.Номер, Фишка2.Местоположение)+
	       Расстояние_фишки_до_места(Фишка3.Номер, Фишка3.Местоположение)+
	       Расстояние_фишки_до_места(Фишка4.Номер, Фишка4.Местоположение)+
	       Расстояние_фишки_до_места(Фишка5.Номер, Фишка5.Местоположение);
$End

$Decision_point Расстановка_фишек : search
$Condition Exist(Фишка: Фишка.Номер <> Фишка.Местоположение)
$Term_condition
	For_All(Фишка: Фишка.Номер == Фишка.Местоположение)
$Evaluate_by 0
$Compare_tops = YES
$Activities
	Перемещение_вправо: Перемещение_фишки(справа,  1) value after 1;
	Перемещение_влево : Перемещение_фишки (слева, -1) value after 1;
	Перемещение_вверх : Перемещение_фишки (сверху,-3) value after 1;
	Перемещение_вниз  : Перемещение_фишки (снизу,  3) value after 1;
$End
